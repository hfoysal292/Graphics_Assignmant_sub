#ifdef __APPLE__
    #include <GLUT/glut.h>
#else
    #include <GL/glut.h>
#endif

#include <iostream>
#include <cmath>
using namespace std;


int x1_user, y1_user;
int x2_user, y2_user;
int lineWidthW;

const int WINDOW_W = 640;
const int WINDOW_H = 480;


void putPixel(int x, int y)
{
    glVertex2i(x, y);
}


void putThickPixel(int x, int y, int halfWidth, bool shallowSlope)
{
    if (shallowSlope)
    {

        for (int off = -halfWidth; off <= halfWidth; off++)
        {
            putPixel(x, y + off);
        }
    }
    else
    {

        for (int off = -halfWidth; off <= halfWidth; off++)
        {
            putPixel(x + off, y);
        }
    }
}

void drawThickLineBresenham(int x1, int y1, int x2, int y2, int W)
{


    int dx = x2 - x1;
    int dy = y2 - y1;

    bool steep = abs(dy) > abs(dx);

    if (steep)
    {
        std::swap(x1, y1);
        std::swap(x2, y2);

        dx = x2 - x1;
        dy = y2 - y1;
    }


    if (x1 > x2)
    {
        std::swap(x1, x2);
        std::swap(y1, y2);
        dx = x2 - x1;
        dy = y2 - y1;
    }

    int stepY = (y2 >= y1) ? 1 : -1;

    int absDx = abs(dx);
    int absDy = abs(dy);

    int d = 2 * absDy - absDx;

    int y = y1;


    int halfWidth = (W - 1) / 2;

    glBegin(GL_POINTS);

    for (int x = x1; x <= x2; x++)
    {
        if (!steep)
        {

            putThickPixel(x, y, halfWidth, /*shallowSlope=*/true);
        }
        else
        {

            putThickPixel(y, x, halfWidth, /*shallowSlope=*/false);
        }

        if (d > 0)
        {
            y += stepY;
            d -= 2 * absDx;
        }
        d += 2 * absDy;
    }

    glEnd();
}



void display()
{
    glClear(GL_COLOR_BUFFER_BIT);

    glColor3f(1.0f, 1.0f, 1.0f);

    drawThickLineBresenham(x1_user, y1_user, x2_user, y2_user, lineWidthW);

    glFlush();
}



void initGL()
{
    glClearColor(0.0f, 0.0f, 0.0f, 1.0f);

    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();


    gluOrtho2D(0, WINDOW_W, 0, WINDOW_H);
}


int main(int argc, char** argv)
{

    cout << "Enter x1 y1: ";
    cin >> x1_user >> y1_user;

    cout << "Enter x2 y2: ";
    cin >> x2_user >> y2_user;

    cout << "Enter line thickness W (odd number like 1,3,5,... is best): ";
    cin >> lineWidthW;

    if (lineWidthW < 1) lineWidthW = 1;


    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(WINDOW_W, WINDOW_H);
    glutInitWindowPosition(100, 100);
    glutCreateWindow("Bresenham Thick Line");

    initGL();

    glutDisplayFunc(display);

    glutMainLoop();
    return 0;
}
